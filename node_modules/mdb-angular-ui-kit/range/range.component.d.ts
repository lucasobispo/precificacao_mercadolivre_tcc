import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const RANGE_VALUE_ACCESOR: any;
export declare class MdbRangeComponent implements ControlValueAccessor, AfterViewInit {
    private _cdRef;
    input: ElementRef;
    thumb: ElementRef;
    thumbValue: ElementRef;
    id: string;
    required: boolean;
    name: string;
    value: string;
    disabled: boolean;
    min: number;
    max: number;
    step: number;
    default: boolean;
    defaultRangeCounterClass: string;
    rangeValueChange: EventEmitter<any>;
    visibility: boolean;
    thumbStyle: any;
    onchange(event: any): void;
    onInput(): void;
    constructor(_cdRef: ChangeDetectorRef);
    ngAfterViewInit(): void;
    focusRangeInput(): void;
    blurRangeInput(): void;
    thumbPositionUpdate(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
}
